
Процедура РассчитатьНачисления(ДвиженияНачислений, ВидРасчета, МассивСотрудников) Экспорт

Регистратор = ДвиженияНачислений.Отбор.Регистратор.Значение;

Если ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
// Расчет первичных записей 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	НачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма,
			|	НачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
			|	НачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки
			|ИЗ
			|	РегистрРасчета.Начисления.ДанныеГрафика(
			|			Регистратор = &Регистратор
			|				И ВидРасчета = &ВидРасчета
			|				И Сотрудник В (&МассивСотрудников)) КАК НачисленияДанныеГрафика";
	Запрос.УстановитьПараметр("Регистратор",		Регистратор);
	Запрос.УстановитьПараметр("ВидРасчета",			ВидРасчета);
	Запрос.УстановитьПараметр("МассивСотрудников",	МассивСотрудников);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	// Расчет записей регистра расчета в зависимости от графика
	Для Каждого ЗаписьРегистра Из ДвиженияНачислений Цикл
		СтруктураПоиска = Новый Структура("НомерСтроки", ЗаписьРегистра.НомерСтроки);
		Выборка.Сбросить();
		
		Если Выборка.НайтиСледующий(СтруктураПоиска) Тогда
			
			Если Выборка.Норма = 0 Тогда
				// Если записей по графику нет
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Для вида расчета Оклад нет рабочих дней в указанном периоде!";
				Сообщение.Сообщить();
				ЗаписьРегистра.Результат = 0;
			Иначе
				// Если записи по графику есть, то рассчитаем все по фактическому периоду и исходным данным
				ЗаписьРегистра.Результат = (ЗаписьРегистра.ИсходныеДанные / Выборка.Норма) * Выборка.Факт;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Выполнен расчет " + ЗаписьРегистра.Регистратор + " - "
					+ ЗаписьРегистра.ВидРасчета + " - " + ЗаписьРегистра.Сотрудник;
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
ИначеЕсли ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Премия Тогда
	//Расчет втоичных записей   
	
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	НачисленияБазаНачисления.РезультатБаза КАК База,
			|	НачисленияБазаНачисления.НомерСтроки КАК НомерСтроки
			|ИЗ
			|	РегистрРасчета.Начисления.БазаНачисления(
			|			&ИзмеренияОсновные, 
			|			&ИзмеренияБазовые,
            |           ,
			|			Регистратор = &Регистратор
			|				И ВидРасчета = &ВидРасчета
		|				И Сотрудник В (&МассивСотрудников)) КАК НачисленияБазаНачисления";
		Измерения = Новый Массив(1);
		Измерения [0] = "Сотрудник";
		Запрос.УстановитьПараметр("ИзмеренияОсновные",	Измерения);
		Запрос.УстановитьПараметр("ИзмеренияБазовые",	Измерения);
		Запрос.УстановитьПараметр("Регистратор",		Регистратор);
		Запрос.УстановитьПараметр("ВидРасчета",			ВидРасчета);
		Запрос.УстановитьПараметр("МассивСотрудников",	МассивСотрудников);
		
		Выборка = Запрос.Выполнить().Выбрать(); 
		
		// Расчет записей регистра расчета в зависимости от базовых начислений
		Для Каждого ЗаписьРегистра Из ДвиженияНачислений Цикл
			СтруктураПоиска = Новый Структура("НомерСтроки", ЗаписьРегистра.НомерСтроки);
			Выборка.Сбросить();
			
		Если Выборка.НайтиСледующий(СтруктураПоиска) Тогда
				// Премия будет 10%
				ЗаписьРегистра.Результат = Выборка.База * (10 / 100);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Выполнен расчет " + ЗаписьРегистра.Регистратор + " - "
				+ ЗаписьРегистра.ВидРасчета + " - " + ЗаписьРегистра.Сотрудник;
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЦикла;	
		
		
		
	КонецЕсли;  
КонецПроцедуры

	


Процедура ПерерассчитатьНачисления(ВидРасчета) Экспорт
	
	// Здесь следует выбрать из набора записей перерасчета записи в следующей последовательности:
	// записи документа1 для сотрудников из списка,
	// записи документа2 для сотрудников из списка и т.д.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НачисленияПерерасчет.ОбъектПерерасчета КАК ОбъектПерерасчета,
	|	НачисленияПерерасчет.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрРасчета.Начисления.Перерасчет КАК НачисленияПерерасчет
	|ГДЕ
	|	НачисленияПерерасчет.ВидРасчета = &ВидРасчета
	|ИТОГИ ПО
	|	ОбъектПерерасчета");
	Запрос.УстановитьПараметр("ВидРасчета", ВидРасчета);
	СписокСотрудников = Новый СписокЗначений;
	
	// Перебрать группировку по регистратору.
	ВыборкаПоРегистратору = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоРегистратору.Следующий() Цикл
		Регистратор = ВыборкаПоРегистратору.ОбъектПерерасчета;
		
		// Перебрать группировку по сотрудникам для выбранного регистратора
		// и создать список сотрудников.
		ВыборкаПоСотрудникам = ВыборкаПоРегистратору.Выбрать();
		СписокСотрудников.Очистить();
		Пока ВыборкаПоСотрудникам.Следующий() Цикл
			СписокСотрудников.Добавить(ВыборкаПоСотрудникам.Сотрудник);
		КонецЦикла;   
		// Получить набор записей регистра расчета для выбранного регистратора.
		НаборЗаписей = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Значение = Регистратор;
		НаборЗаписей.Прочитать();
		РассчитатьНачисления(НаборЗаписей, ВидРасчета, СписокСотрудников);
		НаборЗаписей.Записать( , Истина);
		
		// Очистить перерассчитанные записи в перерасчете.
		НаборЗаписейПерерасчета = РегистрыРасчета.Начисления.Перерасчеты.Перерасчет.СоздатьНаборЗаписей();
		НаборЗаписейПерерасчета.Отбор.ОбъектПерерасчета.Значение = Регистратор;
		НаборЗаписейПерерасчета.Записать();
	КонецЦикла;	
КонецПроцедуры                         





